/// <reference types="wechat-miniprogram" />
/// <reference types="wechat-miniprogram" />
export interface ResponseResultData<T = any> {
    [key: string]: any;
    data: T;
}
interface Http {
    <T = ResponseResultData>(options: WechatMiniprogram.RequestOption): Promise<T>;
    /**
     * 配置接口基础路径
     */
    baseURL?: string;
    /**
     * 请求状态配置，同wx.showLoading
     */
    loading: WechatMiniprogram.ShowLoadingOption;
    intercept: {
        request(options: WechatMiniprogram.RequestOption): WechatMiniprogram.RequestOption;
        response(result: WechatMiniprogram.RequestSuccessCallbackResult & {
            config: WechatMiniprogram.RequestOption;
        }): any;
    };
    /**
     * GET 方法请求
     */
    get<T = any>(url: string, data?: string | AnyObject): Promise<ResponseResultData<T>>;
    /**
     * POST 方法请求
     */
    post<T = any>(url: string, data?: string | AnyObject): Promise<ResponseResultData<T>>;
    /**
     * PUT 方法请求
     */
    put<T = any>(url: string, data?: string | AnyObject): Promise<ResponseResultData<T>>;
    /**
     * DELETE 方法请求
     */
    delete<T = any>(url: string, data?: string | AnyObject): Promise<ResponseResultData<T>>;
}
declare function createHttp(config?: {
    showLoading: boolean;
}): Http;
declare const http: Http;
export type { Http };
export { http as default, createHttp };
